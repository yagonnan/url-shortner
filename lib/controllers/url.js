'use strict'

const debug = require('debug')('url-shortner:url')
const error = require('debug')('url-shortner:url')
const config = require('../config')
const shortid = require('shortid')

module.exports = {
  checkUrlCode,
  generateUrl
}

/**
 * check the incoming traffic
 * url code is generated by our system
 */
async function checkUrlCode (ctx) {
  debug(checkUrlCode.name)
  const code = ctx.checkParams('code').value
  if (ctx.errors) {
    return _handleErr(ctx, ctx.errors, config.static.http.status.badRequest, config.static.response.page.badRequest)
  }
  const isCodeExists = await ctx.models.UrlShorten.getCode(code)
  if (!isCodeExists) {
    return _handleErr(ctx, config.error.notFound, config.static.http.status.badRequest, config.static.response.page.badRequest)
  }

  ctx.redirect(isCodeExists.original_url)
}

async function generateUrl (ctx) {
  debug(generateUrl.name)
  const originalUrl = ctx.checkBody('originalUrl').notEmpty().isUrl().value
  const shortBaseUrl = ctx.checkBody('shortBaseUrl').notEmpty().isUrl().value

  if (ctx.errors) {
    return _handleErr(ctx, ctx.errors, config.static.http.status.badRequest, config.static.response.code.badRequest)
  }
  const urlCode = shortid.generate()
  const shortUrl = `${shortBaseUrl}/${urlCode}`

  await ctx.models.UrlShorten.createUrl({
    original_url: originalUrl,
    url_code: urlCode,
    short_url: shortUrl
  })

  ctx.body = {
    shortUrl,
    urlCode
  }
}

function _handleErr (ctx, err, httpCode, errorCode) {
  error(err.error || err)
  ctx.status = httpCode || 400
  ctx.body = {
    message: err.message || 'Something went wrong, please try again',
    error: err.error || err,
    code: errorCode || 113
  }
}
